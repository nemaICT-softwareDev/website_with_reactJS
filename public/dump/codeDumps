
    //      sortSelectedProducts = (e) => (items, itemToBeRemoved) => {
    //      // attempt 4
    //     // let itemFound = items.find((item) => item.id === itemToBeRemoved.id)
    //     // let removedItemList = null
    //     // let newListWithAddedItem = null
    //     // let updatedList = null
    //     //
    //     //     if(itemToBeRemoved !== ''){
    //     //         // remove item and return new list without it
    //     //         removedItemList = update(items, {$splice: [[itemToBeRemoved, 1]]});
    //     //         // insert item at the end of the array
    //     //         newListWithAddedItem = update(removedItemList, {$push:[itemFound]})
    //     //         // here the state of the items doesn't change
    //     //         updatedList = update(newListWithAddedItem, {$splice: [[itemToBeRemoved, 0]]})
    //     //         items = updatedList;
    //     //         console.log(items);
    //     //         this.setState({[this.props.cartItems]: items})
    //     //         this.setState({[e.target.name]: e.target.checked});
    //     //         //items.sort((a,b) => a.key - b.key? 1 : -1)
    //     //     }
    //     //      console.log(items);
    //     //      return items;
    //
    //     // // attempt 3
    //     // if(itemInCart !== ''){
    //     //     this.state.shoppingCart.sort(
    //     //         (a,b) =>  a.title - b.title ? 1 : -1)
    //     // }else{
    //     //     this.state.shoppingCart.sort(
    //     //         (a,b) =>
    //     //             (a.title - b.title ? 1 : -1))
    //     // }
    //
    //   //   // attempt 2
    //   // let foundObject = items.find((item) => item.id === itemInCart.id);
    //   // let removedItemList = null
    //   // let itemPushedToEndList = null
    //   // let updatedList = null
    //   //
    //   //   items.forEach((cartItem) => {
    //   //       if (cartItem.id === foundObject.id) {
    //   //           removedItemList = update(items, {$splice: [[cartItem, 1]]});  // array.splice(start, deleteCount, item1)
    //   //           itemPushedToEndList = update(removedItemList, {$push:[foundObject]})
    //   //           updatedList = update(itemPushedToEndList, {$push: [[foundObject, 1]]})
    //   //           this.state.shoppingCart = updatedList
    //   //           //this.setState({[this.state.shoppingCart] : updatedList})
    //   //
    //   //       }});
    //   //   console.log(itemPushedToEndList);
    //   //   return itemPushedToEndList;
    //   //   console.log(items);
    //
    //
    //     // // attempt 1
    //     // // o item é o array que passo como parametro
    //     //  let index = items.find((item) => item.id === itemInCart.id);
    //     // // aqui removo o item
    //     //  const removedItemList = update(items, {$splice: [[index, 1]]});  // array.splice(start, deleteCount, item1)
    //     // /* aqui coloco ele no fim do array*/
    //     //  const itemPushedToEndList = update(removedItemList, {$push:[index]});
    //     //  const updatedList = update(items, {$splice: [[index, 1, itemPushedToEndList]]});  // array.splice(start, deleteCount, item1)
    //     // //// infelizmente o setState não esta funcionando aqui, de modo que a lista items retorna o valor inicial
    //     //  this.setState({items: updatedList});
    //
    // }


    // reducer
    /*
         return {
                                ...state,
                                filteredItems: action.payload.items,
                                item: action.payload.sort
                            };
    */